$columns: 12;
$atom: (100% / $columns);

$break_lg: 1199px;
$break_md: 1024px;
$break_sm: 768px;

$offset_lg: 30px;
$offset_sm: 30px;
$offset_xs: 30px;

$offset_lg_one_side: ($offset_lg / 2);
$offset_sm_one_side: ($offset_sm / 2);
$offset_xs_one_side: $offset_xs;

$fields: 15px;
$fields_sm: 15px;
$fields_xs: 15px;

@mixin container-full() {

  @include xs-block() {
    padding-left: $fields_xs;
    padding-right: $fields_xs;
  }
  @include sm-block() {
    padding-left: $fields_sm;
    padding-right: $fields_sm;
  }
  @include lg-block() {
    padding-left: $fields;
    padding-right: $fields;
  }
}

@mixin row-offsets() {
  @include xs-block() {
    margin-left: ($offset_xs_one_side * -1);
    margin-right: ($offset_xs_one_side * -1);
  }
  @include sm-block() {
    margin-left: ($offset_sm_one_side * -1);
    margin-right: ($offset_sm_one_side * -1);
  }
  @include lg-block() {
    margin-left: ($offset_lg_one_side * -1);
    margin-right: ($offset_lg_one_side * -1);
  }
}

@mixin col-offsets($type) {
  @include xs-block() {
    #{$type}-left: $offset_xs_one_side;
    #{$type}-right: $offset_xs_one_side;
  }
  @include sm-block() {
    #{$type}-left: $offset_sm_one_side;
    #{$type}-right: $offset_sm_one_side;
  }
  @include lg-block() {
    #{$type}-left: $offset_lg_one_side;
    #{$type}-right: $offset_lg_one_side;
  }
}

@mixin container() {
  margin: 0 auto;
  max-width: 1202px;
  @include container-full();
}

@mixin row-flex() {
  display: flex;
  flex-wrap: wrap;
  @include row-offsets();
}

@mixin col() {
  @include col-offsets(margin);
}

@mixin col-padding() {
  @include col-offsets(padding);
}

// TODO: сетку править
@mixin size($n) {
  $val: 100% / $columns * $n;

  @include xs-block() {
    width: #{$val};
  }
  @include sm-block() {
    width: #{$val};
  }
  @include lg-block() {
    width: #{$val};
  }
}

@mixin size-lg($n) {
  $val: 100% / $columns * $n;
  @include lg(width, #{$val});
}

@mixin size-sm($n) {
  $val: 100% / $columns * $n;
  @include sm(width, #{$val});
}

@mixin size-xs($n) {
  $val: 100% / $columns * $n;
  @include xs(width, #{$val});
}

// complete
@mixin lg($name, $value) {
  @media screen and (min-width: $break_lg){
    #{$name}: $value;
  }
}

@mixin lg-block() {
  @media screen and (min-width: $break_lg) {
    @content;
  }
}

@mixin sm($name, $value) {
  @media screen and (min-width: $break_sm) and (max-width: $break_lg - 1) {
    #{$name}: $value;
  }
}

@mixin sm-block() {
  @media screen and (min-width: $break_sm) and (max-width: $break_lg - 1) {
    @content;
  }
}

@mixin xs($name, $value) {
  @media screen and (max-width: $break_sm - 1) {
    #{$name}: $value;
  }
}

@mixin xs-block() {
  @media screen and (max-width: $break_sm - 1) {
    @content;
  }
}

@mixin from($min_width) {
  @media screen and (min-width: $min_width) {
    @content;
  }
}

@mixin from-sm() {
  @media screen and (min-width: $break_sm) {
    @content;
  }
}
@mixin from-md() {
  @media screen and (min-width: $break_md) {
    @content;
  }
}

@mixin from-lg() {
  @media screen and (min-width: $break_lg) {
    @content;
  }
}

@mixin to($max_width) {
  @media screen and (max-width: $max_width) {
    @content;
  }
}

@mixin to-sm() {
  @media screen and (max-width: $break_sm - 1px) {
    @content;
  }
}
@mixin to-md() {
  @media screen and (max-width: $break_md - 1px) {
    @content;
  }
}

@mixin to-lg() {
  @media screen and (max-width: $break_lg - 1px) {
    @content;
  }
}

@mixin from-to($min_width, $max_width) {
  @media screen and (min-width: $min_width) and (max-width: $max_width) {
    @content;
  }
}
